/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Service as PrismaService } from "@prisma/client";

export class ServiceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ServiceCountArgs, "select">): Promise<number> {
    return this.prisma.service.count(args);
  }

  async services<T extends Prisma.ServiceFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ServiceFindManyArgs>
  ): Promise<PrismaService[]> {
    return this.prisma.service.findMany<Prisma.ServiceFindManyArgs>(args);
  }
  async service<T extends Prisma.ServiceFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ServiceFindUniqueArgs>
  ): Promise<PrismaService | null> {
    return this.prisma.service.findUnique(args);
  }
  async createService<T extends Prisma.ServiceCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ServiceCreateArgs>
  ): Promise<PrismaService> {
    return this.prisma.service.create<T>(args);
  }
  async updateService<T extends Prisma.ServiceUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ServiceUpdateArgs>
  ): Promise<PrismaService> {
    return this.prisma.service.update<T>(args);
  }
  async deleteService<T extends Prisma.ServiceDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ServiceDeleteArgs>
  ): Promise<PrismaService> {
    return this.prisma.service.delete(args);
  }
}
